<?php

class Account_linking extends CI_Controller {

	function __construct() {

		parent::__construct();

		// Load the necessary stuff...
		$this->load->config('auth/auth_new');
		$this->load->helper(array('language', 'ssl', 'url'));
        $this->load->library(array('auth/authentication_new', 'form_validation', 'connect/facebook_lib'));
		$this->load->model(array('auth/account_model_new', 'auth/account_details_model_new', 'connect/account_facebook_model', 'connect/account_twitter_model'));
		$this->load->language(array('general', 'connect/connect'));
	}

	function index() {

		// Enable SSL?
		maintain_ssl($this->config->item("ssl_enabled"));
		
		// Check if config sign up third party is enabled
		if($this->config->item('social_media_enabled')) {

			// Redirect user to home if 'connect_create' session data doesn't exist
			if ( ! $this->session->userdata('account_linking')) redirect('auth/sign_in_new');

			$data['account_linking'] = $this->session->userdata('account_linking');
		
			// Setup form validation
			$this->form_validation->set_error_delimiters('<span class="field_error">', '</span>');
			$this->form_validation->set_rules(array(
				array('field'=>'connect_linking_username', 'label'=>'lang:connect_linking_username', 'rules'=>'trim|required|alpha_numeric|min_length[2]|max_length[16]'),
				array('field'=>'connect_linking_email', 'label'=>'lang:connect_linking_email', 'rules'=>'trim|required|valid_email|max_length[160]')
			));
		
			// Run form validation
			if ($this->form_validation->run()) {						
							
				// Check if username already exist
				if ($this->username_check($this->input->post('connect_linking_username')) === TRUE) {

					$data['connect_linking_username_error'] = lang('connect_linking_username_taken');
				}
				// Check if email already exist
				elseif ($this->email_check($this->input->post('connect_linking_email')) === TRUE) {

					$data['connect_linking_email_error'] = lang('connect_linking_email_exist');
				}
				else {

					// Destroy 'connect_create' session data
					$this->session->unset_userdata('account_linking');
				
					// Create user
					$user_id = $this->account_model_new->create($this->input->post('connect_linking_username'), $this->input->post('connect_linking_email'));
				
					// Add user details
					$this->account_details_model_new->update($user_id, $data['account_linking'][1]);
				
					// Connect third party account to user
					switch($data['account_linking'][0]['provider'])
					{
						case 'facebook': 
							$this->account_facebook_model->insert($user_id, $data['account_linking'][0]['provider_id']); 
							break;
						case 'twitter': 
							$this->account_twitter_model->insert($user_id, $data['account_linking'][0]['provider_id'], $data['account_linking'][0]['token'], $data['account_linking'][0]['secret']); 
							break;
						case 'openid': 
							$this->account_openid_model->insert($data['account_linking'][0]['provider_id'], $user_id); 
							break;
					}
				
					// Run sign in routine
					$this->authentication->sign_in($user_id);
				}
			}

			$this->load->view('account_linking', isset($data) ? $data : NULL);
		}
		else {

			redirect('auth/sign_in_new');
		}
	}

	function username_check($username) {

		return $this->account_model->get_by_username($username) ? TRUE : FALSE;
	}

	function email_check($email) {

		return $this->account_model->get_by_email($email) ? TRUE : FALSE;
	}
}
